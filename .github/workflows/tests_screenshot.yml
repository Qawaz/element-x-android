name: Test Screenshot

## Run screenshots test, in case of error, create a branch and record the screenshot, then comment the Pull Request.

on:
  pull_request:
    branches:
      - main

concurrency:
  group: pr-main-${{ github.head_ref }}
  cancel-in-progress: true

# Enrich gradle.properties for CI/CD
env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3072m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError" -Dkotlin.daemon.jvm.options="-Xmx2560m" -Dkotlin.incremental=false
  CI_GRADLE_ARG_PROPERTIES: --stacktrace -PpreDexEnable=false --max-workers 4 --warn

jobs:
  screenshot-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          # Ensure we are building the branch and not the branch after being merged on develop
          # https://github.com/actions/checkout/issues/881
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
          lfs: 'true'
          fetch-depth: 0
      - name: Run screenshot tests
        id: run-screenshot-tests
        run: ./gradlew verifyPaparazziDebug $CI_GRADLE_ARG_PROPERTIES -Pci-build=true
      - name: Process failed screenshot tests
        if: failure()
        id: failed-screenshots
        run: "./.github/workflows/scripts/process_failed_screenshots.sh"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
          PR_BRANCH: ${{ github.head_ref }}
      - name: Comment PR if screenshot tests failed
        uses: octokit/request-action@v2.0.0
        if: always() && steps.failed-screenshots.outputs.PR_COMMENT
        with:
          route: POST /repos/:repo/issues/:issue_number/comments
          repo: ${{ github.repository }}
          issue_number: ${{ steps.failed-screenshots.outputs.PR_NUMBER }}
          body: ${{ steps.failed-screenshots.outputs.PR_COMMENT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
